import{_ as s,o as a,c as e,Q as n}from"./chunks/framework.fd95ed2e.js";const h=JSON.parse('{"title":"Quick Start","description":"Quick Start","frontmatter":{"title":"Quick Start","description":"Quick Start"},"headers":[],"relativePath":"../../../docs/quick-start.md","filePath":"../../../docs/quick-start.md"}'),l={name:"../../../docs/quick-start.md"},o=n(`<h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><p>In this doc you&#39;ll find information on quickly getting started using JSX email. For more in-depth information, please see the other sections of our Documentation.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noreferrer">Node.js</a> v18.0.0+</li><li>React v18.2.0</li></ul><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>The easiest way to get started is by using the JSX email CLI.</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">pnpm</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">add</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">@jsx-email/cli</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">-g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># We recommend pnpm - https://pnpm.io</span></span>
<span class="line"><span style="color:#6A9955;"># But npm and yarn are supported</span></span>
<span class="line"><span style="color:#6A9955;"># npm add @jsx-email/cli</span></span>
<span class="line"><span style="color:#6A9955;"># yarn add @jsx-email/cli</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">pnpm</span><span style="color:#002339;"> </span><span style="color:#A44185;">add</span><span style="color:#002339;"> </span><span style="color:#A44185;">@jsx-email/cli</span><span style="color:#002339;"> </span><span style="color:#174781;">-g</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># We recommend pnpm - https://pnpm.io</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># But npm and yarn are supported</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># npm add @jsx-email/cli</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># yarn add @jsx-email/cli</span></span></code></pre></div><p>If you want to avoid global installation, you can use npx instead:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">pnpm</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">exec</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">email</span><span style="color:#E6E6E6;"> </span><span style="color:#D4D4D4;">&lt;</span><span style="color:#CE9178;">comman</span><span style="color:#E6E6E6;">d</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># With npm or yarn</span></span>
<span class="line"><span style="color:#6A9955;"># npx email &lt;command&gt;</span></span>
<span class="line"><span style="color:#6A9955;"># yarn email &lt;command&gt;</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">pnpm</span><span style="color:#002339;"> </span><span style="color:#A44185;">exec</span><span style="color:#002339;"> </span><span style="color:#A44185;">email</span><span style="color:#002339;"> </span><span style="color:#7B30D0;">&lt;</span><span style="color:#A44185;">comman</span><span style="color:#002339;">d</span><span style="color:#7B30D0;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># With npm or yarn</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># npx email &lt;command&gt;</span></span>
<span class="line"><span style="color:#357B42;font-style:italic;"># yarn email &lt;command&gt;</span></span></code></pre></div><h2 id="create-a-template" tabindex="-1">Create A Template <a class="header-anchor" href="#create-a-template" aria-label="Permalink to &quot;Create A Template&quot;">​</a></h2><p>First, we&#39;ll create a directory for our email templates, and then add a new template:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">mkdir</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">./emails</span></span>
<span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">email</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">create</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">BatmanEmail</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">--out=./emails</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">mkdir</span><span style="color:#002339;"> </span><span style="color:#A44185;">./emails</span></span>
<span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">email</span><span style="color:#002339;"> </span><span style="color:#A44185;">create</span><span style="color:#002339;"> </span><span style="color:#A44185;">BatmanEmail</span><span style="color:#002339;"> </span><span style="color:#174781;">--out=./emails</span></span></code></pre></div><p>This command will create a new template named <code>BatmanEmail.tsx</code> in the <code>./emails</code> directory.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If you&#39;d rather create a <code>.jsx</code> file, use the <code>--jsx</code> flag</p></div><h2 id="superstruct" tabindex="-1">Superstruct <a class="header-anchor" href="#superstruct" aria-label="Permalink to &quot;Superstruct&quot;">​</a></h2><p><a href="docs.superstructjs.org">Superstruct</a> is a fantastic validation package that predates <code>zod</code> and <code>yup</code>. It&#39;s smaller and faster than alternatives and uses a delightful API without chaining or cruft. JSX email uses it as an option for defining <code>prop</code> types and creating props for use in email previews.</p><h2 id="email-previews" tabindex="-1">Email Previews <a class="header-anchor" href="#email-previews" aria-label="Permalink to &quot;Email Previews&quot;">​</a></h2><p>One of the major benefits of JSX email over alternatives is our incredibly slim and fast preview server, which requires no additional dependency installation, complex mounting, or difficult setup rules for monorepos. To run the preview server, run the following command in your terminal:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">email</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">preview</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">./emails</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">email</span><span style="color:#002339;"> </span><span style="color:#A44185;">preview</span><span style="color:#002339;"> </span><span style="color:#A44185;">./emails</span></span></code></pre></div><p>The CLI will startup a preview server and open a new browser tab at <code>http://localhost:55420</code>. It&#39;s that simple.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Please use <code>email help preview</code> to view optional flags, including setting the port.</p></div><h2 id="building-your-template" tabindex="-1">Building Your Template <a class="header-anchor" href="#building-your-template" aria-label="Permalink to &quot;Building Your Template&quot;">​</a></h2><p>The next step is to build your template. This can be done with the CLI, or with the <a href="/docs/core/render">Core Render Package</a> in code. While most people will need to render emails dynamically at runtime using <code>@jsx-email/render</code>, the CLI is capable of rendering both static and dynamic emails that take props as input. To build your email into an HTML document, run:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki slack-dark vp-code-dark"><code><span class="line"><span style="color:#DCDCAA;">$</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">email</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">build</span><span style="color:#E6E6E6;"> </span><span style="color:#CE9178;">./emails/BatmanEmail.tsx</span></span></code></pre><pre class="shiki slack-ochin vp-code-light"><code><span class="line"><span style="color:#7EB233;">$</span><span style="color:#002339;"> </span><span style="color:#A44185;">email</span><span style="color:#002339;"> </span><span style="color:#A44185;">build</span><span style="color:#002339;"> </span><span style="color:#A44185;">./emails/BatmanEmail.tsx</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Please use <code>email help build</code> to view optional flags, including providing props and setting the output path.</p></div>`,25),p=[o];function t(c,r,i,d,y,m){return a(),e("div",null,p)}const E=s(l,[["render",t]]);export{h as __pageData,E as default};
